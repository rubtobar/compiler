00001022 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 30/5/2018 22:05:08

00001000                             1      ORG $1000
00001000  =00000001                  2      TRUE:   EQU 1
00001000  =00000000                  3      FALSE:  EQU 0
00001000                             4  WRITE:
00001000                             5      ;Do the print
00001000  700E                       6      move.l #14, D0
00001002  43EF 0004                  7      lea 4(SP), A1
00001006  4E4F                       8      trap #15
00001008  103C 000B                  9      move.b #11, D0
0000100C  2207                      10      move.l D7, D1
0000100E  4E4F                      11      trap #15
00001010  5207                      12      addq.b #1, D7
00001012                            13      ;give control to caller
00001012  4E75                      14      rts
00001014                            15  READ:
00001014                            16      ;Do the read
00001014  303C 0002                 17      move #2, D0
00001018  224F                      18      movea.l SP, A1
0000101A  5889                      19      add.l #4,A1
0000101C  4E4F                      20      trap #15
0000101E  5207                      21      addq.b #1, D7
00001020                            22      ;give control to caller
00001020  4E75                      23      rts
00001022                            24  START:
00001022                            25      ;A6 to index variables
00001022  2C4F                      26      move.l SP, A6
00001024                            27      ;A5 to index global variables
00001024  2A4F                      28      move.l SP, A5
00001026                            29  
00001026                            30      ;t0 save space in Stack
00001026  9FFC 00000020             31      sub.l #32, SP
0000102C                            32      ;t1 save space in Stack
0000102C  9FFC 00000020             33      sub.l #32, SP
00001032                            34      ;t2 save space in Stack
00001032  9FFC 00000020             35      sub.l #32, SP
00001038                            36      ;READ return space
00001038  9FFC 00000020             37      sub.l #32, SP
0000103E                            38  
0000103E                            39      ;t0 = call READ
0000103E  6100 FFD4                 40      bsr.l READ
00001042                            41      ;clean parameters
00001042  DFFC 00000000             42      add.l #0, SP
00001048                            43      ;fetch return
00001048  2B5F FFE0                 44      move.l (SP)+, -32(A5)
0000104C  2B5F FFE4                 45      move.l (SP)+, -28(A5)
00001050  2B5F FFE8                 46      move.l (SP)+, -24(A5)
00001054  2B5F FFEC                 47      move.l (SP)+, -20(A5)
00001058  2B5F FFF0                 48      move.l (SP)+, -16(A5)
0000105C  2B5F FFF4                 49      move.l (SP)+, -12(A5)
00001060  2B5F FFF8                 50      move.l (SP)+, -8(A5)
00001064  2B5F FFFC                 51      move.l (SP)+, -4(A5)
00001068                            52  
00001068                            53      ;READ return space
00001068  9FFC 00000020             54      sub.l #32, SP
0000106E                            55  
0000106E                            56      ;t1 = call READ
0000106E  6100 FFA4                 57      bsr.l READ
00001072                            58      ;clean parameters
00001072  DFFC 00000000             59      add.l #0, SP
00001078                            60      ;fetch return
00001078  2B5F FFC0                 61      move.l (SP)+, -64(A5)
0000107C  2B5F FFC4                 62      move.l (SP)+, -60(A5)
00001080  2B5F FFC8                 63      move.l (SP)+, -56(A5)
00001084  2B5F FFCC                 64      move.l (SP)+, -52(A5)
00001088  2B5F FFD0                 65      move.l (SP)+, -48(A5)
0000108C  2B5F FFD4                 66      move.l (SP)+, -44(A5)
00001090  2B5F FFD8                 67      move.l (SP)+, -40(A5)
00001094  2B5F FFDC                 68      move.l (SP)+, -36(A5)
00001098                            69  
00001098                            70      ;t2 = "han estat 2"
00001098  2B7C 68616E20 FFA0        71      move.l #'han ', -96(A5)
000010A0  2B7C 65737461 FFA4        72      move.l #'esta', -92(A5)
000010A8  1B7C 0074 FFA8            73      move.b #'t', -88(A5)
000010AE  1B7C 0020 FFA9            74      move.b #' ', -87(A5)
000010B4  1B7C 0032 FFAA            75      move.b #'2', -86(A5)
000010BA  1B7C 0000 FFAB            76      move.b #0, -85(A5)
000010C0                            77  
000010C0                            78      ;param t2
000010C0  9FFC 00000020             79      sub.l #32, SP
000010C6  2F6D FFA0 0000            80      move.l -96(A5), 0(SP)
000010CC  2F6D FFA4 0004            81      move.l -92(A5), 4(SP)
000010D2  2F6D FFA8 0008            82      move.l -88(A5), 8(SP)
000010D8  2F6D FFAC 000C            83      move.l -84(A5), 12(SP)
000010DE  2F6D FFB0 0010            84      move.l -80(A5), 16(SP)
000010E4  2F6D FFB4 0014            85      move.l -76(A5), 20(SP)
000010EA  2F6D FFB8 0018            86      move.l -72(A5), 24(SP)
000010F0  2F6D FFBC 001C            87      move.l -68(A5), 28(SP)
000010F6                            88  
000010F6                            89      ;call WRITE
000010F6  6100 FF08                 90      bsr.l WRITE
000010FA                            91      ;clean parameters
000010FA  DFFC 00000020             92      add.l #32, SP
00001100                            93  
00001100                            94      ;Terminate program
00001100  303C 0009                 95      move #9,D0
00001104  4E4F                      96      trap #15
00001106                            97  
00001106  FFFF FFFF                 98      SIMHALT
0000110A                            99  
0000110A                           100  
0000110A                           101  
0000110A                           102      END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
FALSE               0
READ                1014
START               1022
TRUE                1
WRITE               1000
