00001044 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 16/6/2018 17:56:06

00001000                             1      ORG $1000
00001000  =00000001                  2      TRUE:   EQU 1
00001000  =00000000                  3      FALSE:  EQU 0
00001000                             4  WRITE_STRING:
00001000                             5      ;Do the print
00001000  700E                       6      move.l #14, D0
00001002  43EF 0004                  7      lea 4(SP), A1
00001006  4E4F                       8      trap #15
00001008  103C 000B                  9      move.b #11, D0
0000100C  2207                      10      move.l D7, D1
0000100E  4E4F                      11      trap #15
00001010  5207                      12      addq.b #1, D7
00001012                            13      ;give control to caller
00001012  4E75                      14      rts
00001014                            15  WRITE_INT:
00001014                            16      ;Do the print
00001014  7003                      17      move.l #3, D0
00001016  222F 0004                 18      move.l 4(SP), D1
0000101A  4E4F                      19      trap #15
0000101C  103C 000B                 20      move.b #11, D0
00001020  2207                      21      move.l D7, D1
00001022  4E4F                      22      trap #15
00001024  5207                      23      addq.b #1, D7
00001026                            24      ;give control to caller
00001026  4E75                      25      rts
00001028                            26  READSTRING:
00001028                            27      ;Do the read
00001028  303C 0002                 28      move #2, D0
0000102C  224F                      29      movea.l SP, A1
0000102E  5889                      30      add.l #4,A1
00001030  4E4F                      31      trap #15
00001032  5207                      32      addq.b #1, D7
00001034                            33      ;give control to caller
00001034  4E75                      34      rts
00001036                            35  READINT:
00001036                            36      ;Do the read
00001036  303C 0004                 37      move #4, D0
0000103A  4E4F                      38      trap #15
0000103C  2F41 0004                 39      move.l D1, 4(SP)
00001040  5207                      40      addq.b #1, D7
00001042                            41      ;give control to caller
00001042  4E75                      42      rts
00001044                            43  START:
00001044                            44      ;A6 to index variables
00001044  2C4F                      45      move.l SP, A6
00001046                            46      ;A5 to index global variables
00001046  2A4F                      47      move.l SP, A5
00001048                            48  
00001048                            49      ;aux save space in Stack
00001048  598F                      50      sub.l #4, SP
0000104A                            51      ;t6 save space in Stack
0000104A  558F                      52      sub.l #2, SP
0000104C                            53      ;t7 save space in Stack
0000104C  598F                      54      sub.l #4, SP
0000104E                            55      ;t8 save space in Stack
0000104E  9FFC 00000020             56      sub.l #32, SP
00001054                            57      ;t9 save space in Stack
00001054  598F                      58      sub.l #4, SP
00001056                            59      ;goto: MAIN
00001056  6000 019C                 60      BRA MAIN
0000105A                            61  ;L0: skip
0000105A                            62  L0:
0000105A                            63      ;preambulo funcion
0000105A                            64      ;save BP
0000105A  2F0E                      65      move.l A6, -(SP)
0000105C                            66      ;set BP
0000105C  2C4F                      67      move.l SP, A6
0000105E                            68      ;save space for local vars
0000105E  9FFC 00000038             69      sub.l #56, SP
00001064                            70  
00001064                            71      ;t0 = 33
00001064  2D7C 00000021 FFFC        72      move.l #33, -4(A6)
0000106C                            73  
0000106C                            74      ;a = t0
0000106C  2D6E FFFC FFF8            75      move.l -4(A6), -8(A6)
00001072                            76  
00001072                            77      ;t1 = 16
00001072  2D7C 00000010 FFF4        78      move.l #16, -12(A6)
0000107A                            79  
0000107A                            80      ;b = t1
0000107A  2D6E FFF4 FFF0            81      move.l -12(A6), -16(A6)
00001080                            82  
00001080                            83  ;L1: skip
00001080                            84  L1:
00001080                            85      ;if a != b goto L3
00001080  202E FFF8                 86      move.l -8(A6), D0
00001084  B0AE FFF0                 87      cmp.l -16(A6), D0
00001088  6600 000C                 88      bne.l L3
0000108C                            89  
0000108C                            90      ;t2 = FALSE
0000108C  3D7C 0000 FFEE            91      move.w #FALSE, -18(A6)
00001092                            92  
00001092                            93      ;goto: L4
00001092  6000 0008                 94      BRA L4
00001096                            95  ;L3: skip
00001096                            96  L3:
00001096                            97      ;t2 = TRUE
00001096  3D7C 0001 FFEE            98      move.w #TRUE, -18(A6)
0000109C                            99  
0000109C                           100  ;L4: skip
0000109C                           101  L4:
0000109C                           102      ;if t2 = FALSE goto L2
0000109C  202E FFEE                103      move.l -18(A6), D0
000010A0  B0BC 00000000            104      cmp.l #FALSE, D0
000010A6  6700 0140                105      beq.l L2
000010AA                           106  
000010AA                           107      ;aux = a
000010AA  2B6E FFF8 FFFC           108      move.l -8(A6), -4(A5)
000010B0                           109  
000010B0                           110      ;if aux > b goto L5
000010B0  202D FFFC                111      move.l -4(A5), D0
000010B4  B0AE FFF0                112      cmp.l -16(A6), D0
000010B8  6E00 000C                113      bgt.l L5
000010BC                           114  
000010BC                           115      ;t3 = FALSE
000010BC  3D7C 0000 FFEC           116      move.w #FALSE, -20(A6)
000010C2                           117  
000010C2                           118      ;goto: L6
000010C2  6000 0008                119      BRA L6
000010C6                           120  ;L5: skip
000010C6                           121  L5:
000010C6                           122      ;t3 = TRUE
000010C6  3D7C 0001 FFEC           123      move.w #TRUE, -20(A6)
000010CC                           124  
000010CC                           125  ;L6: skip
000010CC                           126  L6:
000010CC                           127      ;if t3 = FALSE goto L7
000010CC  202E FFEC                128      move.l -20(A6), D0
000010D0  B0BC 00000000            129      cmp.l #FALSE, D0
000010D6  6700 0072                130      beq.l L7
000010DA                           131  
000010DA                           132      ;t4 = a - b
000010DA  202E FFF8                133      move.l -8(A6), D0
000010DE  90AE FFF0                134      sub.l -16(A6), D0
000010E2  2D40 FFE8                135      move.l D0,-24(A6)
000010E6                           136  
000010E6                           137      ;a = t4
000010E6  2D6E FFE8 FFF8           138      move.l -24(A6), -8(A6)
000010EC                           139  
000010EC                           140      ;t5 = "a -> "
000010EC  2D7C 61202D3E FFC8       141      move.l #'a ->', -56(A6)
000010F4  1D7C 0020 FFCC           142      move.b #' ', -52(A6)
000010FA  1D7C 0000 FFCD           143      move.b #0, -51(A6)
00001100                           144  
00001100                           145      ;param t5
00001100  9FFC 00000020            146      sub.l #32, SP
00001106  2F6E FFC8 0000           147      move.l -56(A6), 0(SP)
0000110C  2F6E FFCC 0004           148      move.l -52(A6), 4(SP)
00001112  2F6E FFD0 0008           149      move.l -48(A6), 8(SP)
00001118  2F6E FFD4 000C           150      move.l -44(A6), 12(SP)
0000111E  2F6E FFD8 0010           151      move.l -40(A6), 16(SP)
00001124  2F6E FFDC 0014           152      move.l -36(A6), 20(SP)
0000112A  2F6E FFE0 0018           153      move.l -32(A6), 24(SP)
00001130  2F6E FFE4 001C           154      move.l -28(A6), 28(SP)
00001136                           155  
00001136                           156      ;call WRITE_STRING
00001136  6100 FEC8                157      bsr.l WRITE_STRING
0000113A                           158      ;clean parameters
0000113A  DFFC 00000020            159      add.l #32, SP
00001140                           160  
00001140                           161      ;param a
00001140  2F2E FFF8                162      move.l -8(A6), -(SP)
00001144                           163  
00001144                           164      ;call WRITE_INT
00001144  6100 FECE                165      bsr.l WRITE_INT
00001148                           166      ;clean parameters
00001148  588F                     167      add.l #4, SP
0000114A                           168  
0000114A                           169  ;L7: skip
0000114A                           170  L7:
0000114A                           171      ;if aux <= b goto L8
0000114A  202D FFFC                172      move.l -4(A5), D0
0000114E  B0AE FFF0                173      cmp.l -16(A6), D0
00001152  6F00 000C                174      ble.l L8
00001156                           175  
00001156                           176      ;t6 = FALSE
00001156  3B7C 0000 FFFA           177      move.w #FALSE, -6(A5)
0000115C                           178  
0000115C                           179      ;goto: L9
0000115C  6000 0008                180      BRA L9
00001160                           181  ;L8: skip
00001160                           182  L8:
00001160                           183      ;t6 = TRUE
00001160  3B7C 0001 FFFA           184      move.w #TRUE, -6(A5)
00001166                           185  
00001166                           186  ;L9: skip
00001166                           187  L9:
00001166                           188      ;if t6 = FALSE goto L10
00001166  202D FFFA                189      move.l -6(A5), D0
0000116A  B0BC 00000000            190      cmp.l #FALSE, D0
00001170  6700 0072                191      beq.l L10
00001174                           192  
00001174                           193      ;t7 = b - a
00001174  202E FFF0                194      move.l -16(A6), D0
00001178  90AE FFF8                195      sub.l -8(A6), D0
0000117C  2B40 FFF6                196      move.l D0,-10(A5)
00001180                           197  
00001180                           198      ;b = t7
00001180  2D6D FFF6 FFF0           199      move.l -10(A5), -16(A6)
00001186                           200  
00001186                           201      ;t8 = "b -> "
00001186  2B7C 62202D3E FFD6       202      move.l #'b ->', -42(A5)
0000118E  1B7C 0020 FFDA           203      move.b #' ', -38(A5)
00001194  1B7C 0000 FFDB           204      move.b #0, -37(A5)
0000119A                           205  
0000119A                           206      ;param t8
0000119A  9FFC 00000020            207      sub.l #32, SP
000011A0  2F6D FFD6 0000           208      move.l -42(A5), 0(SP)
000011A6  2F6D FFDA 0004           209      move.l -38(A5), 4(SP)
000011AC  2F6D FFDE 0008           210      move.l -34(A5), 8(SP)
000011B2  2F6D FFE2 000C           211      move.l -30(A5), 12(SP)
000011B8  2F6D FFE6 0010           212      move.l -26(A5), 16(SP)
000011BE  2F6D FFEA 0014           213      move.l -22(A5), 20(SP)
000011C4  2F6D FFEE 0018           214      move.l -18(A5), 24(SP)
000011CA  2F6D FFF2 001C           215      move.l -14(A5), 28(SP)
000011D0                           216  
000011D0                           217      ;call WRITE_STRING
000011D0  6100 FE2E                218      bsr.l WRITE_STRING
000011D4                           219      ;clean parameters
000011D4  DFFC 00000020            220      add.l #32, SP
000011DA                           221  
000011DA                           222      ;param b
000011DA  2F2E FFF0                223      move.l -16(A6), -(SP)
000011DE                           224  
000011DE                           225      ;call WRITE_INT
000011DE  6100 FE34                226      bsr.l WRITE_INT
000011E2                           227      ;clean parameters
000011E2  588F                     228      add.l #4, SP
000011E4                           229  
000011E4                           230  ;L10: skip
000011E4                           231  L10:
000011E4                           232      ;goto: L1
000011E4  6000 FE9A                233      BRA L1
000011E8                           234  ;L2: skip
000011E8                           235  L2:
000011E8                           236      ;return a
000011E8                           237      ;send return value
000011E8  2D6E FFF8 0008           238      move.l -8(A6), 8(A6)
000011EE                           239      ;prepare SP
000011EE  2E4E                     240      move.l A6, SP
000011F0                           241      ;restore BP
000011F0  2C5F                     242      move.l (SP)+, A6
000011F2                           243      ;give control to caller
000011F2  4E75                     244      rts
000011F4                           245  
000011F4                           246  ;MAIN: skip
000011F4                           247  MAIN:
000011F4                           248      ;L0 return space
000011F4  598F                     249      sub.l #4, SP
000011F6                           250  
000011F6                           251      ;t9 = call L0
000011F6  6100 FE62                252      bsr.l L0
000011FA                           253      ;clean parameters
000011FA  DFFC 00000000            254      add.l #0, SP
00001200                           255      ;fetch return
00001200  2B5F FFD2                256      move.l (SP)+, -46(A5)
00001204                           257  
00001204                           258      ;Terminate program
00001204  303C 0009                259      move #9,D0
00001208  4E4F                     260      trap #15
0000120A                           261  
0000120A  FFFF FFFF                262      SIMHALT
0000120E                           263  
0000120E                           264  
0000120E                           265  
0000120E                           266      END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
FALSE               0
L0                  105A
L1                  1080
L10                 11E4
L2                  11E8
L3                  1096
L4                  109C
L5                  10C6
L6                  10CC
L7                  114A
L8                  1160
L9                  1166
MAIN                11F4
READINT             1036
READSTRING          1028
START               1044
TRUE                1
WRITE_INT           1014
WRITE_STRING        1000
