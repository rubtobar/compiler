00001044 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 16/06/2018 19:11:44

00001000                             1      ORG $1000
00001000  =00000001                  2      TRUE:   EQU 1
00001000  =00000000                  3      FALSE:  EQU 0
00001000                             4  WRITE_STRING:
00001000                             5      ;Do the print
00001000  700E                       6      move.l #14, D0
00001002  43EF 0004                  7      lea 4(SP), A1
00001006  4E4F                       8      trap #15
00001008  103C 000B                  9      move.b #11, D0
0000100C  2207                      10      move.l D7, D1
0000100E  4E4F                      11      trap #15
00001010  5207                      12      addq.b #1, D7
00001012                            13      ;give control to caller
00001012  4E75                      14      rts
00001014                            15  WRITE_INT:
00001014                            16      ;Do the print
00001014  7003                      17      move.l #3, D0
00001016  222F 0004                 18      move.l 4(SP), D1
0000101A  4E4F                      19      trap #15
0000101C  103C 000B                 20      move.b #11, D0
00001020  2207                      21      move.l D7, D1
00001022  4E4F                      22      trap #15
00001024  5207                      23      addq.b #1, D7
00001026                            24      ;give control to caller
00001026  4E75                      25      rts
00001028                            26  READSTRING:
00001028                            27      ;Do the read
00001028  303C 0002                 28      move #2, D0
0000102C  224F                      29      movea.l SP, A1
0000102E  5889                      30      add.l #4,A1
00001030  4E4F                      31      trap #15
00001032  5207                      32      addq.b #1, D7
00001034                            33      ;give control to caller
00001034  4E75                      34      rts
00001036                            35  READINT:
00001036                            36      ;Do the read
00001036  303C 0004                 37      move #4, D0
0000103A  4E4F                      38      trap #15
0000103C  2F41 0004                 39      move.l D1, 4(SP)
00001040  5207                      40      addq.b #1, D7
00001042                            41      ;give control to caller
00001042  4E75                      42      rts
00001044                            43  START:
00001044                            44      ;Initialize line number
00001044  7E01                      45      move.l #1, D7
00001046                            46      ;A6 to index variables
00001046  2C4F                      47      move.l SP, A6
00001048                            48      ;A5 to index global variables
00001048  2A4F                      49      move.l SP, A5
0000104A                            50  
0000104A                            51      ;t2 save space in Stack
0000104A  558F                      52      sub.l #2, SP
0000104C                            53      ;t3 save space in Stack
0000104C  598F                      54      sub.l #4, SP
0000104E                            55      ;t4 save space in Stack
0000104E  598F                      56      sub.l #4, SP
00001050                            57      ;t0 save space in Stack
00001050  598F                      58      sub.l #4, SP
00001052                            59      ;a save space in Stack
00001052  598F                      60      sub.l #4, SP
00001054                            61      ;t1 save space in Stack
00001054  598F                      62      sub.l #4, SP
00001056                            63      ;t0 = 0
00001056  2B7C 00000000 FFFC        64      move.l #0, -4(A5)
0000105E                            65  
0000105E                            66      ;a = t0
0000105E  2B6D FFFC FFF8            67      move.l -4(A5), -8(A5)
00001064                            68  
00001064                            69  ;L0: skip
00001064                            70  L0:
00001064                            71      ;t1 = 500
00001064  2B7C 000001F4 FFF4        72      move.l #500, -12(A5)
0000106C                            73  
0000106C                            74      ;if a < t1 goto L2
0000106C  202D FFF8                 75      move.l -8(A5), D0
00001070  B0AD FFF4                 76      cmp.l -12(A5), D0
00001074  6D00 000C                 77      blt.l L2
00001078                            78  
00001078                            79      ;t2 = FALSE
00001078  3B7C 0000 FFF2            80      move.w #FALSE, -14(A5)
0000107E                            81  
0000107E                            82      ;goto: L3
0000107E  6000 0008                 83      BRA L3
00001082                            84  ;L2: skip
00001082                            85  L2:
00001082                            86      ;t2 = TRUE
00001082  3B7C 0001 FFF2            87      move.w #TRUE, -14(A5)
00001088                            88  
00001088                            89  ;L3: skip
00001088                            90  L3:
00001088                            91      ;if t2 = FALSE goto L1
00001088  302D FFF2                 92      move.w -14(A5), D0
0000108C  B07C 0000                 93      cmp.w #FALSE, D0
00001090  6700 0028                 94      beq.l L1
00001094                            95  
00001094                            96      ;param a
00001094  2F2D FFF8                 97      move.l -8(A5), -(SP)
00001098                            98  
00001098                            99      ;call WRITE_INT
00001098  6100 FF7A                100      bsr.l WRITE_INT
0000109C                           101      ;clean parameters
0000109C  588F                     102      add.l #4, SP
0000109E                           103  
0000109E                           104      ;t3 = 1
0000109E  2B7C 00000001 FFEE       105      move.l #1, -18(A5)
000010A6                           106  
000010A6                           107      ;t4 = a + t3
000010A6  202D FFF8                108      move.l -8(A5), D0
000010AA  D0AD FFEE                109      add.l -18(A5), D0
000010AE  2B40 FFEA                110      move.l D0,-22(A5)
000010B2                           111  
000010B2                           112      ;a = t4
000010B2  2B6D FFEA FFF8           113      move.l -22(A5), -8(A5)
000010B8                           114  
000010B8                           115      ;goto: L0
000010B8  60AA                     116      BRA L0
000010BA                           117  ;L1: skip
000010BA                           118  L1:
000010BA                           119      ;Terminate program
000010BA  303C 0009                120      move #9,D0
000010BE  4E4F                     121      trap #15
000010C0                           122  
000010C0  FFFF FFFF                123      SIMHALT
000010C4                           124  
000010C4                           125  
000010C4                           126  
000010C4                           127      END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
FALSE               0
L0                  1064
L1                  10BA
L2                  1082
L3                  1088
READINT             1036
READSTRING          1028
START               1044
TRUE                1
WRITE_INT           1014
WRITE_STRING        1000
